/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ClientPack;

import java.awt.Point;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class FrmFeed extends javax.swing.JFrame implements MouseListener, MouseMotionListener {

    FrmMain parent;
    MyTimerTask task;
    int image[];
    MyImage mi;
    Timer timer;
    int count = 0;
    Point initialClick;

    public FrmFeed(FrmMain parent) {
        this.parent = parent;
        initComponents();
        setLocationRelativeTo(this);
        addMouseListener(new MouseAdapter() {

            public void mousePressed(MouseEvent e) {
                initialClick = e.getPoint();
                getComponentAt(initialClick);
            }
        });

        addMouseMotionListener(new MouseMotionAdapter() {

            @Override
            public void mouseDragged(MouseEvent e) {

                // get location of Window
                int thisX = getLocation().x;
                int thisY = getLocation().y;

                // Determine how much the mouse moved since the initial click
                int xMoved = (thisX + e.getX()) - (thisX + initialClick.x);
                int yMoved = (thisY + e.getY()) - (thisY + initialClick.y);

                // Move window to this position
                int X = thisX + xMoved;
                int Y = thisY + yMoved;
                setLocation(X, Y);
            }
        });

    }

    @Override
    public void mouseClicked(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mousePressed(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseExited(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseDragged(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    class MyTimerTask extends TimerTask {

        @Override
        public void run() {
            mi = (MyImage) streamVideo(parent.deviceID);
            if (mi.state.equals("InActive") && count == 0 && !mi.service.equals("Snapshot")) {
                count++;
                JOptionPane.showMessageDialog(parent, "Video Feed is Inactive on Server Side");
            }
            jLabel1.setText(mi.state);
            image = new int[mi.ww * mi.hh];
            for (int i = 0; i < mi.img.size(); i++) {
                image[i] = (int) mi.img.get(i);
            }
            BufferedImage bi = new BufferedImage(mi.ww, mi.hh, BufferedImage.TYPE_INT_RGB);
            bi.setRGB(0, 0, mi.ww, mi.hh, image, 0, mi.ww);
            jLabelFeed.setIcon(new ImageIcon(bi));
            jLabelFeed.repaint();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabelFeed = new javax.swing.JLabel();
        jBLoadNew = new javax.swing.JButton();
        jBLoadNew1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jBLoadNew2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 204, 102), 8, true));

        jLabelFeed.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFeed.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelFeed.setMaximumSize(new java.awt.Dimension(640, 480));
        jLabelFeed.setMinimumSize(new java.awt.Dimension(640, 480));
        jLabelFeed.setPreferredSize(new java.awt.Dimension(640, 480));

        jBLoadNew.setBackground(new java.awt.Color(255, 204, 102));
        jBLoadNew.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBLoadNew.setText("START FEED");
        jBLoadNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLoadNewActionPerformed(evt);
            }
        });

        jBLoadNew1.setBackground(new java.awt.Color(255, 204, 102));
        jBLoadNew1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBLoadNew1.setText("STOP FEED");
        jBLoadNew1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLoadNew1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jBLoadNew2.setBackground(new java.awt.Color(255, 204, 102));
        jBLoadNew2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBLoadNew2.setText("BACK");
        jBLoadNew2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLoadNew2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelFeed, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jBLoadNew, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBLoadNew1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBLoadNew2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelFeed, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBLoadNew, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBLoadNew1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBLoadNew2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBLoadNew, jBLoadNew1});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBLoadNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLoadNewActionPerformed
        timer = new Timer();
        task = new MyTimerTask();
        timer.schedule(task, 10, 100);//start after 10ms and diff. between two iterations is 100ms
    }//GEN-LAST:event_jBLoadNewActionPerformed

    private void jBLoadNew1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLoadNew1ActionPerformed
        timer.cancel();
        JOptionPane.showMessageDialog(parent, "Feed Stopped Successfully");
    }//GEN-LAST:event_jBLoadNew1ActionPerformed

    private void jBLoadNew2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLoadNew2ActionPerformed
        this.setVisible(false);
        parent.setVisible(true);
    }//GEN-LAST:event_jBLoadNew2ActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBLoadNew;
    private javax.swing.JButton jBLoadNew1;
    private javax.swing.JButton jBLoadNew2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelFeed;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables

    private static MyImage streamVideo(int eIn) {
        ClientPack.MyService_Service service = new ClientPack.MyService_Service(serverSettings.serverAddress);
        ClientPack.MyService port = service.getMyServicePort();
        return port.streamVideo(eIn);
    }
}
